DROP TABLE IF EXISTS film_genres;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS rating_mpa;

CREATE TABLE IF NOT EXISTS genres (
    id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR(127) NOT NULL
    );

CREATE TABLE IF NOT EXISTS rating_mpa (
    mpa_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_name VARCHAR(127) NOT NULL
    );

CREATE TABLE IF NOT EXISTS films (
    id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name VARCHAR(127) NOT NULL,
    description VARCHAR(200) NOT NULL,
    duration INT NOT NULL,
    release_date TIMESTAMP NOT NULL,
    rating_id INT REFERENCES rating_mpa (mpa_id) ON DELETE RESTRICT ON UPDATE CASCADE
    );

CREATE TABLE IF NOT EXISTS users (
    id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name VARCHAR(127),
    login VARCHAR(127) NOT NULL,
    email VARCHAR(127) NOT NULL,
    birthday DATE
    );

CREATE TABLE IF NOT EXISTS film_genres (
    film_id INT NOT NULL REFERENCES films (id) ON DELETE RESTRICT ON UPDATE CASCADE,
    genre_id INT NOT NULL REFERENCES genres (id) ON DELETE RESTRICT ON UPDATE CASCADE
    );

CREATE TABLE IF NOT EXISTS likes (
    film_id INT NOT NULL REFERENCES films (id) ON DELETE RESTRICT ON UPDATE CASCADE,
    user_id INT NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE CASCADE
    );

CREATE TABLE IF NOT EXISTS friends (
    user_id INT NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE CASCADE,
    friend_id INT NOT NULL REFERENCES users (id) ON DELETE RESTRICT ON UPDATE CASCADE,
    status BOOLEAN NOT NULL
    );